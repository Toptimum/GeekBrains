# Задание-1:
# Доработайте реализацию программы из примера examples/5_with_args.py,
# добавив реализацию следующих команд (переданных в качестве аргументов):
#   cp <file_name> - создает копию указанного файла
#   rm <file_name> - удаляет указанный файл (запросить подтверждение операции)
#   cd <full_path or relative_path> - меняет текущую директорию на указанную
#   ls - отображение полного пути текущей директории
# путь считать абсолютным (full_path) -
# в Linux начинается с /, в Windows с имени диска,
# все остальные пути считать относительными.

# Важно! Все операции должны выполняться в той директории, в которой вы находитесь.
# Исходной директорией считать ту, в которой был запущен скрипт.

# P.S. По возможности, сделайте кросс-платформенную реализацию.

import os
import sys
import shutil


# функция вывода справки
def print_help():
	print("Можете добавить следующие команды при запуске:\n\
		help - для вывода справки,\n\
		cofi <file_name> - создает копию указанного файла,\n\
		defi <file_name> - удаляет указанный файл (с подтверждением),\n\
		chdi <full_path or relative_path> - меняет текущую директорию на указанную,\n\
		path - отображает полный путь к текущей директории.")

# функция создания копии файла
def copy_file():
	if not file_name:
		print("Для создания копии файла необходимо указать название файла с расширением.")
		return
	try:
		shutil.copyfile(file_name, file_name + '-копия')
		print(f"Копия файла {file_name} успешно создана.")
	except FileNotFoundError:
		print(f"Файл {file_name} не существует. Возможно, вы ошиблись в названии.")
		return

# функция удаления файла
def delete_file():
	if not file_name:
		print("Для удаления файла необходимо указать его имя с расширением.")
		return

	answer = input(f"Вы уверены, что хотите удалить файл {file_name}? Введите да/нет: ")
	if answer == 'да':
		try:
			os.remove(file_name)
			print(f"Файл {file_name} удален.")
		except FileNotFoundError:
			print(f"Файл {file_name} не существует. Возможно, вы ошиблись в названии.")
			return
	else:
		print(f"Файл {file_name} не удален.")
		return

# функция смены директории !!! данная функция работает некорректно
def change_directory():
	os.chdir(path)
	print("Теперь вы находитесь в папке:", os.getcwd())
	# функция меняет директорию только в этой функции
	# функция ниже опять отобразит директорию, из которой запущена программа
	# в общем не получается глобально сменить рабочую директорию

# функция отображения пути текущей директории
def full_path():
	print("Вы находитесь в папке:", os.getcwd())


# словарь возможных аргументов для запуска программы
do = {'help': print_help, 'cofi': copy_file, 'defi': delete_file, 'chdi': change_directory, 'path': full_path}

# получаем основной аргумент при запуске
try:
	key = sys.argv[1]
except IndexError:
	key = None

# получаем второй дополнительный аргумент при запуске
try:
	file_name, path = sys.argv[2], sys.argv[2]
except IndexError:
	file_name = None

# проверяем существование ключа и запускаем соответствующую функцию
if key:
	if do.get(key):
		do[key]()
	else:
		print("Задан неверный ключ. Укажите ключ help для получения справки.")
