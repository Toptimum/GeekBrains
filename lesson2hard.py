# Задание-2: Дата задана в виде строки формата 'dd.mm.yyyy'.
# Проверить, корректно ли введена дата.
# Условия корректности:
# 1. День должен приводиться к целому числу в диапазоне от 1 до 30(31)
#  (в зависимости от месяца, февраль не учитываем)
# 2. Месяц должен приводиться к целому числу в диапазоне от 1 до 12
# 3. Год должен приводиться к целому положительному числу в диапазоне от 1 до 9999
# 4. Длина исходной строки для частей должна быть в соответствии с форматом 
#  (т.е. 2 символа для дня, 2 - для месяца, 4 - для года)

dates = ['0.12.1345', '01.11.1985', '01.22.1001', '1.12.1001', '-2.10.3001', '01.04.2019', '32.13.2020', '1.4.19', '01.4.19', '1.04.19', '1.4.2019', '01.04.19']

for date in dates:
	numbers = date.split('.')
	# Проверяем числа на корректность
	if int(numbers[0]) < 1 or int(numbers[0]) > 31 or int(numbers[1]) < 1 or int(numbers[1]) > 12 or int(numbers[2]) < 1500 or int(numbers[2]) > 2019:
		print(f"{date} - некорректная дата")
	# Дополнительная проверка на формат даты и месяца
	elif len(numbers[0]) < 2 or len(numbers[1]) < 2 :
		print(f"{date} - некорректная дата")
	else:
		print(f"{date} - корректная дата!")


# ==================================================================================== 
# Остальные задачи не смог решить(((

# Задание-1: уравнение прямой вида y = kx + b задано в виде строки.
# Определить координату y точки с заданной координатой x.
'''equation = 'y = -12x + 11111140.2121'
x = 2.5
# вычислите и выведите y

new_equation = equation.replace('x', " " + str(x))

numbers = new_equation.split()
print(numbers)

print(x.replace('.','',1).isdigit())

for num in numbers:
	stroka = str(num)

	print(stroka.isdigit())'''

# =============================================================================
# Задание-3: "Перевёрнутая башня" (Задача олимпиадного уровня)
#
# Вавилонцы решили построить удивительную башню —
# расширяющуюся к верху и содержащую бесконечное число этажей и комнат.
# Она устроена следующим образом — на первом этаже одна комната,
# затем идет два этажа, на каждом из которых по две комнаты, 
# затем идёт три этажа, на каждом из которых по три комнаты и так далее:
#         ...
#     12  13  14
#     9   10  11
#     6   7   8
#       4   5
#       2   3
#         1
#
# Эту башню решили оборудовать лифтом --- и вот задача:
# нужно научиться по номеру комнаты определять,
# на каком этаже она находится и какая она по счету слева на этом этаже.
#
# Входные данные: В первой строчке задан номер комнаты N, 1 ≤ N ≤ 2 000 000 000.
#
# Выходные данные:  Два целых числа — номер этажа и порядковый номер слева на этаже.
#
# Пример:
# Вход: 13
# Выход: 6 2
#
# Вход: 11
# Выход: 5 3

#kvartira = 1
#for etazh in range(1,5):
	#print(f"На {etazh} этаже должно быть {etazh * etazh} квартир:")
	
	#for i in range(0, etazh * etazh):
		#print(kvartira)
		#kvartira += 1

'''house = {}
flats = []
num_flat = 0

for floor in range(1,10):
	print(floor)
	for i in range(0, floor * floor):
		num_flat += 1
		flats.append(num_flat)
	print(flats)
	house[floor] = flats
	flats = []
	#print(house[floor])

print(house)

for floor in range(1,4):
	print(floor)
	for i in range(0, floor):
		print(i)
		for k in range(0, floor * floor):
			num_flat += 1
			flats.append(num_flat)
		print(flats)'''
